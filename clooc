#!/bin/bash
#Test un programme looc passé en paramètre et construit son AST en l'affichant
echo "/!\ Le script doit être lancé en bash, à son emplacement. /!\ "
echo "/!\ Les AST sont produits dans le dossier AST/ et leur nom sont préfixés de \"AST\" suivi du nom du programme. /!\ "
if [ -z $1 ]
then
  echo "Erreur : Indiquez un fichier looc à parser."
  exit
fi

if [ -f $1 ]
then
  rm -f .dotversion &> /dev/null
  rm -f .javacversion &> /dev/null
  rm -f .javaversion &> /dev/null
  (java -version | head -n1) &> .javaversion
  JAVA=$(<.javaversion)
  (javac -version | head -n1) &> .javacversion
  JAVAC=$(<.javacversion)
  EOG=$(eog --version | head -n1 | cut -d" " -f2-4)
  (dot -V | head -n1 | cut -d" " -f3) &> .dotversion
  DOT=$(<.dotversion)
  echo $JAVA | grep -q found && JAVA=""
  echo $JAVAC | grep -q found && JAVAC=""
  echo $EOG | grep -q found && EOG=""
  echo $DOT | grep -q found && DOT=""
  if [[ -z $JAVA ]]; then
    while true; do
      read -p "java (OpenJDK-8-JRE) n'est pas installé, souhaitez-vous l'installer (apt-get) ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " rep3
      case $rep3 in
        ""|[OoyY]* ) sudo apt-get install openjdk-8-jre
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done
  fi
  if [[ -z $JAVAC ]]; then
    while true; do
      read -p "javac (Compilateur Java, OpenJDK-8-JDK) n'est pas installé, souhaitez-vous l'installer (apt-get) ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " rep4
      case $rep4 in
        ""|[OoyY]* ) sudo apt-get install openjdk-8-jdk
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done
  fi
  if [[ -z $EOG ]]; then
    while true; do
      read -p "eog (Image Viewer for GNOME) n'est pas installé, souhaitez-vous l'installer (apt-get) ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " rep1
      case $rep1 in
        ""|[OoyY]* ) sudo apt-get install eog
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done
  fi
  if [[ -z $DOT ]]; then
    while true; do
      read -p "dot (graphviz) n'est pas installé, souhaitez-vous l'installer (apt-get) ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " rep2
      case $rep2 in
        ""|[OoyY]* ) sudo apt-get install graphviz
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done
  fi
  rm -f .javacversion &> /dev/null
  rm -f .dotversion &> /dev/null
  rm -f .javaversion &> /dev/null
  if ! diff ANTLR/antlr-3.3-complete.jar patch/antlr-3.3-complete-unpatch.jar > /dev/null
  then
    echo "[CLOOC] ANTLR/antlr-3.3-complete.jar semble être patché correctement pour java 8."
  else
    echo "[CLOOC] /!\ ANTLR/antlr-3.3-complete.jar ne semble pas être patché correctement pour java 8. /!\ "
    echo "[CLOOC] Voulez-vous patcher ce fichier avec le correctif patch/patch-antlr-3.3.patch ?"
    echo "ATTENTION : Ce patch modifie de façon définitive l'archive antlr-3.3-complete.jar. Une version d'origine est disponible sous patch/antlr-3.3-complete-unpatch.jar si besoin."
    while true; do
      read -p "Patcher ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " rep
      case $rep in
        ""|[OoyY]* ) echo "[CLOOC] Lancement du patch ... "
                  patch --verbose ANTLR/antlr-3.3-complete.jar < patch/patch-antlr-3.3.patch
                  echo "[CLOOC] Patch terminé."
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done
  fi
  echo "[CLOOC] Export dans CLASSPATH de antlr-3.3-complete.jar ... (préconfig)"
  fpathantlr=$(readlink -f ANTLR/antlr-3.3-complete.jar)
  export CLASSPATH=$fpathantlr:.:$CLASSPATH
  echo "[CLOOC] Terminé."
  fullpath=$(readlink -f $1)
  cd analyseurs/
  filelooc=$(basename $1)
  filename=${filelooc%.*}
  while true; do
  read -p "[CLOOC] Voulez vous (re-)compiler la grammaire Looc.g ainsi que le compilateur Clooc.java ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " comp
      case $comp in
        ""|[OoyY]* ) echo "[CLOOC] Création des analyseurs lexical et syntaxique à partir de la grammaire Looc.g ..."
                  java -jar ../ANTLR/antlr-3.3-complete.jar Looc.g #&> /dev/null
                  echo "[CLOOC] Compilation de la classe Clooc.java ..."
                  javac -encoding ISO-8859-1 LoocLexer.java LoocParser.java Clooc.java #&> /dev/null
                  echo "[CLOOC] Compilation terminée."
                  break;;
        [Nn]* ) break;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
  done
  echo "[CLOOC] Vérification du programme $filelooc  ..."
  rm -f .result &> /dev/null
  java Clooc $fullpath &> .result
  ERROR=$(<.result)
  if [[ -z $ERROR ]]; then
    echo "[CLOOC] - OK - Le programme $filelooc valide la grammaire Looc.g"
  else
    cat .result
    #sleep 1
    echo "[CLOOC] - ERREUR - Le programme $filelooc ne valide pas la grammaire Looc.g : voir erreurs précédentes."
    rm -f .result &> /dev/null
    exit
  fi
  rm -f .result &> /dev/null
  while true; do
  read -p "[CLOOC] Voulez vous construire l'AST ? Oui(o/O/y/Y/Entrée) ou Non(n/N) : " ok
      case $ok in
       ""|[OoyY]* ) echo "[CLOOC] Construction de l'AST (format DOT) de $filelooc ..."
                  path1="../AST/AST$filename.dot"
		              path12="AST/AST$filename.dot"
                  path2="../AST/AST$filename.png"
		              path22="AST/AST$filename.png"
                  java Clooc -T $fullpath  $path1 &> /dev/null
                  echo "[CLOOC] Terminé"
                  echo "[CLOOC] Conversion de l'arbre DOT en image PNG ..."
                  dot -Tpng $path1 -o $path2 &> /dev/null
                  echo "[CLOOC] Terminé. L'image a été produite dans le fichier $path22"
                  cd ..
                  echo "[CLOOC] Affichage de l'arbre"
                  eog $path22 &> /dev/null &
                  break;;
        [Nn]* ) echo "[CLOOC] Terminé."
                exit;;
        * ) echo "Répondez oui ou non."
            continue;;
      esac
    done

else
  echo "Erreur : Le fichier n'existe pas."
  exit
fi
